; OM File Header - Saved 2015/05/13 19:01:50
; (6.0901 :patc (om-make-point 172 310) (om-make-point 50 32) (om-make-point 1112 873) "" 183 0 "2015/05/13 18:46:41" "2015/05/13 19:01:50")
; End File Header
(in-package :om)(load-lib-for (quote ("OM-Geste")))(setf *om-current-persistent* (om-load-patch1 "statistics" (quote ((let ((box (om-load-editor-box1 "TEXT-BOX 3" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 96 715) (om-make-point 130 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 110 23) "1.0005604" :font (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 176 30) (quote "moving-standard-deviation") "" (om-make-point 575 666) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF 4" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 4))) (om-make-point 518 532) (om-make-point 102 95) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (-10.0 -9.8 -9.6 -9.400001 -9.200001 -9.000001 -8.800001 -8.600001 -8.400002 -8.200002 -8.000002 -7.800002 -7.600003 -7.4000025 -7.2000027 -7.0000024 -6.800003 -6.6000033 -6.4000034 -6.2000036 -6.000004 -5.800004 -5.600004 -5.4000044 -5.2000046 -5.000005 -4.800005 -4.600005 -4.4000054 -4.2000055 -4.0000057 -3.800006 -3.6000057 -3.4000056 -3.2000056 -3.0000055 -2.8000055 -2.6000054 -2.4000054 -2.2000053 -2.0000053 -1.8000052 -1.6000052 -1.4000051 -1.200005 -1.000005 -0.800005 -0.60000504 -0.40000504 -0.20000504 -5.0366E-6 0.19999497 0.39999497 0.59999496 0.79999495 0.999995 1.1999949 1.399995 1.599995 1.799995 1.9999951 2.199995 2.399995 2.5999952 2.7999952 2.9999953 3.1999953 3.3999954 3.5999954 3.7999957 3.9999955 4.1999955 4.3999953 4.599995 4.799995 4.9999948 5.1999946 5.3999944 5.599994 5.799994 5.999994 6.1999936 6.3999934 6.599993 6.799993 6.999993 7.199993 7.3999925 7.599992 7.799992 7.999992 8.199992 8.399992 8.599992 8.799992 8.999991 9.199991 9.399991 9.599991 9.799991)) (quote (0.806396 1.320232 0.9425818 -0.14834798 -1.1246775 -1.2630211 -0.6026182 0.09737855 0.061923445 -0.7821073 -1.7344711 -1.9623387 -1.2642888 -0.25517106 0.19810933 -0.22880607 -1.0231987 -1.3114563 -0.6679793 0.4871234 1.2674434 1.1282325 0.36035758 -0.18361426 0.12089408 1.0912747 1.9017425 1.8399119 0.96045495 0.03492278 -0.15613902 0.46198517 1.1935127 1.216944 0.346283 -0.79140246 -1.3255904 -0.9356637 -0.13888633 0.19149697 -0.3652742 -1.3859649 -1.988932 -1.6424372 -0.65262545 0.117450595 0.039442897 -0.7057666 -1.2987204 -1.0401453 -5.0366E-6 1.0401354 1.2987111 0.70575834 -0.03944993 -0.11745601 0.65262175 1.6424354 1.9889323 1.3859673 0.3652783 -0.19149095 0.13889385 0.93567265 1.3256 0.7914126 -0.34627274 -1.2169341 -1.1935035 -0.4619771 0.15614575 -0.03491801 -0.9604519 -1.8399109 -1.9017435 -1.0912776 -0.120898776 0.18360788 -0.36036533 -1.1282413 -1.267453 -0.48713344 0.66796935 1.3114468 1.02319 0.22879857 -0.19811541 0.25516665 1.2642864 1.9623383 1.7344725 0.7821106 -0.061918497 -0.097372115 0.6026259 1.2630298 1.1246868 0.14835751 -0.9425724 -1.3202231)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) "x" nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point -1045 163) (om-make-point 465 339))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "SLIDER 2" (quote slider) (quote ((om-load-inputfunmenu1 (quote input-funmenu) "vertical or horizontal" "direction" (quote :horizontal) (list (list "horizontal" (quote :horizontal)) (list "vertical" (quote :vertical)))) (om-load-inputfun (quote input-funbox) "min and max values" "range" (list 2 15)) (om-load-inputfun (quote input-funbox) "step" "increment" 1) (om-load-inputfun (quote input-funbox) "slider value" "value" 60) (om-load-inputfun (quote input-funbox) "a patch in mode lambda" "action" nil))) (om-make-point 651 567) (om-make-point 138 58) (let ((rep (om-make-dialog-item (quote slider) (om-make-point 1 1) (om-make-point 122 24) "untitled" :direction :horizontal :range (quote (2 15)) :increment 1 :value 6))) rep) "x" nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box t)) box) (let ((box (om-load-editor-box1 "BPF 5" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 4))) (om-make-point 524 727) (om-make-point 102 95) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (-10.0 -9.8 -9.6 -9.400001 -9.200001 -9.000001 -8.800001 -8.600001 -8.400002 -8.200002 -8.000002 -7.800002 -7.600003 -7.4000025 -7.2000027 -7.0000024 -6.800003 -6.6000033 -6.4000034 -6.2000036 -6.000004 -5.800004 -5.600004 -5.4000044 -5.2000046 -5.000005 -4.800005 -4.600005 -4.4000054 -4.2000055 -4.0000057 -3.800006 -3.6000057 -3.4000056 -3.2000056 -3.0000055 -2.8000055 -2.6000054 -2.4000054 -2.2000053 -2.0000053 -1.8000052 -1.6000052 -1.4000051 -1.200005 -1.000005 -0.800005 -0.60000504 -0.40000504 -0.20000504 -5.0366E-6 0.19999497 0.39999497 0.59999496 0.79999495 0.999995 1.1999949 1.399995 1.599995 1.799995 1.9999951 2.199995 2.399995 2.5999952 2.7999952 2.9999953 3.1999953 3.3999954 3.5999954 3.7999957 3.9999955 4.1999955 4.3999953 4.599995 4.799995 4.9999948 5.1999946 5.3999944 5.599994 5.799994 5.999994 6.1999936 6.3999934 6.599993 6.799993 6.999993 7.199993 7.3999925 7.599992 7.799992 7.999992 8.199992 8.399992 8.599992 8.799992 8.999991 9.199991 9.399991 9.599991 9.799991)) (quote (1.0096616 0.9788512 0.7537824 0.5445428 0.52796847 0.6607572 0.7967912 0.8047706 0.73763675 0.7709795 0.8191315 0.7330408 0.5783162 0.5111078 0.64049584 0.88934225 1.0269102 0.92614055 0.67984266 0.5178376 0.5569567 0.70759845 0.8148465 0.78423697 0.7339684 0.7935789 0.8088023 0.68795854 0.5432668 0.5268259 0.7106044 0.95043606 1.0222293 0.8599638 0.6138816 0.5100321 0.59574825 0.7504704 0.81944317 0.76144845 0.742832 0.81137437 0.7852875 0.6407528 0.5194426 0.5615736 0.78597546 0.9960079 0.99600816 0.7859755 0.5615727 0.51944137 0.6407534 0.7852899 0.8113771 0.742833 0.7614466 0.81944025 0.7504684 0.59574837 0.5100336 0.61388225 0.8599636 1.0222293 0.95043624 0.71060437 0.5268246 0.5432659 0.6879598 0.808805 0.79358155 0.7339686 0.7842347 0.81484384 0.7075971 0.5569573 0.51783896 0.6798429 0.9261402 1.0269102 0.88934237 0.64049536 0.5111064 0.57831586 0.73304266 0.8191343 0.7709816 0.7376362 0.80476815 0.79678894 0.66075635 0.52796954 0.5445438 0.75378246 0.97885114 1.0486821 0.9583137 0.6226714 0.18882534 0.0)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) nil nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point -1045 163) (om-make-point 465 339))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box t)) box) (let ((box (om-load-boxcall (quote genfun) "STDEV" (quote stdev) (quote ((om-load-inputfun (quote input-funbox) "a list, bpf, bpc, 3dc, 3d-trajectory or libs thereof" "SELF" nil) (om-load-inputfun (quote input-funbox) "Bessel's correction" "BESSEL" nil) (om-load-inputfun (quote input-funbox) "windowsize in samples" "WINDOWSIZE" nil))) (om-make-point 526 659) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box t)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 186 30) (quote "Statistics/Feature Extraction") "" (om-make-point 98 43) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "STDEV" (quote stdev) (quote ((om-load-inputfun (quote input-funbox) "a list, bpf, bpc, 3dc, 3d-trajectory or libs thereof" "SELF" nil))) (om-make-point 119 654) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box t)) box) (let ((box (om-load-boxcall (quote genfun) "MAGNITUDE" (quote magnitude) (quote ((om-load-inputfun (quote input-funbox) "a list, bpf, bpc, 3dc, 3d-trajectory or libs thereof" "SELF" nil))) (om-make-point 854 272) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "3DC" (quote 3dc) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 10)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Z coordinates (list)" "z-points" (list 0 0)) (om-load-inputfun (quote input-funbox) "precision (number)" "decimals" 5))) (om-make-point 874 157) (om-make-point 95 87) (let ((newobj (when (find-class (quote 3dc) nil) (let ((newbpf (3dc-from-list (quote (0.05861 0.05861 0.06166 0.0679 0.07393 0.0834 0.08949 0.09896 0.10778 0.1143 0.12059 0.12316 0.12269 0.12059 0.11395 0.10488 0.09216 0.07706 0.05861 0.03694 0.01525 -0.00565 -0.0271 -0.0492 -0.07122 -0.0861 -0.09756 -0.10684 -0.11047 -0.11114 -0.10153 -0.08698 -0.06682 -0.04378 -0.0125 0.0214 0.05861 0.09883 0.13831 0.17936 0.21413 0.25133 0.28495 0.30991 0.32555 0.33421 0.33617 0.32787 0.31455 0.2883 0.25511 0.2172 0.16987 0.11355 0.05861 5.7E-4 -0.05665 -0.11759 -0.17019 -0.21676 -0.26157 -0.293 -0.31442 -0.33462 -0.32393 -0.31548 -0.28641 -0.25574 -0.21386 -0.1597 -0.08691 -0.01354 0.05861 0.13158 0.23055 0.32519 0.36301 0.40706 0.39341 0.54362 0.6674 0.5838 0.66314 0.4614 0.63512 0.38353 0.31918 0.24894 0.20137 0.11555 0.05861 -0.05177 -0.07243 -0.17325 -0.24383 -0.35036 -0.3597 -0.60691 -0.49443 -0.66426 -0.55687 -0.48359 -0.43174 -0.39409 -0.28578 -0.29769 -0.19509 -0.04586 0.05861 0.17472 0.27941 0.41338 0.49585 0.58254 0.65685 0.72276 0.76227 0.76946 0.77278 0.75107 0.70652 0.63107 0.54359 0.43476 0.32183 0.1905 0.05861 -0.07609 -0.21299 -0.34226 -0.45729 -0.55836 -0.64576 -0.71533 -0.75966 -0.77786 -0.77322 -0.73035 -0.67525 -0.60065 -0.49312 -0.37632 -0.2419 -0.09642 0.05861 0.21168 0.36598 0.50604 0.6447 0.77638 0.85912 0.93079 0.97436 1.0 0.99878 0.95989 0.88197 0.79542 0.68814 0.55034 0.39291 0.23116 0.05861 -0.11774 -0.28816 -0.45163 -0.59256 -0.7299 -0.83564 -0.90917 -0.97357 -1.0 -0.98063 -0.93534 -0.86394 -0.75733 -0.63188 -0.48333 -0.31737 -0.13208 0.05861)) (quote (-0.05292 -0.04707 -0.04126 -0.03835 -0.03543 -0.03542 -0.0353 -0.03824 -0.04421 -0.05292 -0.06177 -0.07629 -0.08799 -0.10235 -0.11377 -0.12841 -0.14029 -0.14943 -0.1582 -0.16178 -0.16436 -0.15758 -0.15236 -0.14131 -0.12369 -0.10277 -0.07943 -0.05292 -0.02383 0.00592 0.03557 0.06305 0.09009 0.11315 0.13264 0.14826 0.15568 0.16229 0.15655 0.14602 0.12406 0.10358 0.07066 0.03148 -0.00944 -0.05292 -0.09934 -0.14603 -0.19381 -0.23526 -0.27864 -0.31262 -0.33817 -0.35796 -0.36749 -0.37199 -0.36115 -0.34147 -0.31456 -0.27433 -0.22891 -0.17632 -0.11756 -0.05292 0.01237 0.07454 0.14172 0.19618 0.25852 0.28969 0.33589 0.33192 0.373 0.35684 0.35272 0.32953 0.23779 0.20453 0.20157 0.0868 0.01838 -0.05292 -0.14005 -0.2066 -0.30866 -0.41546 -0.3168 -0.39191 -0.46122 -0.36973 -0.47692 -0.71321 -0.43046 -0.36336 -0.39572 -0.41786 -0.27575 -0.27592 -0.15634 -0.05292 0.04113 0.10312 0.3003 0.30347 0.42018 0.47311 0.56152 0.51271 0.51807 0.62252 0.57945 0.51961 0.45672 0.3739 0.27908 0.18098 0.06493 -0.05292 -0.17254 -0.28934 -0.40343 -0.51396 -0.60638 -0.67777 -0.736 -0.76349 -0.79744 -0.79282 -0.76622 -0.70037 -0.63173 -0.54163 -0.44064 -0.31668 -0.19168 -0.05292 0.08392 0.22347 0.34979 0.46949 0.56687 0.66264 0.73194 0.77217 0.78279 0.7866 0.75312 0.69507 0.60864 0.50745 0.38256 0.24955 0.10296 -0.05292 -0.20828 -0.36428 -0.50466 -0.64089 -0.75678 -0.861 -0.93256 -0.98106 -0.99938 -1.0 -0.95307 -0.88862 -0.79194 -0.68513 -0.54006 -0.39298 -0.22494 -0.05292 0.12371 0.2927 0.45255 0.60649 0.73087 0.83982 0.92286 0.97076 1.0)) (quote (-1.0 -0.98885 -0.9777 -0.96645 -0.95537 -0.9443 -0.93327 -0.92237 -0.91037 -0.90092 -0.88814 -0.87899 -0.86604 -0.85622 -0.84457 -0.83392 -0.82158 -0.81033 -0.79877 -0.79099 -0.77582 -0.76715 -0.75547 -0.7455 -0.73391 -0.72251 -0.71356 -0.70106 -0.68987 -0.67742 -0.66557 -0.65806 -0.64249 -0.63483 -0.6218 -0.61364 -0.60234 -0.58543 -0.57544 -0.56303 -0.55576 -0.54099 -0.53223 -0.52428 -0.5096 -0.50158 -0.485 -0.47716 -0.47211 -0.45937 -0.44395 -0.43137 -0.42025 -0.40653 -0.40339 -0.38951 -0.36913 -0.36893 -0.34774 -0.33734 -0.33397 -0.32961 -0.30304 -0.29959 -0.28321 -0.27449 -0.28027 -0.24309 -0.23102 -0.25661 -0.25022 -0.17589 -0.28298 -0.18107 -0.15954 -0.29531 -0.21591 -0.11292 0.00325 -0.15794 -0.12965 -0.24602 -0.26434 -0.35417 0.15003 0.25928 -0.19404 -0.40306 -0.28255 -0.27113 -0.33258 0.20435 0.41404 -0.2476 -0.16352 0.34727 -0.17908 0.32392 0.2065 0.1892 0.08558 0.07452 0.11565 0.21937 0.25863 0.28584 0.23089 0.22853 0.14112 0.26483 0.30169 0.24059 0.21349 0.27862 0.25164 0.26074 0.31206 0.31169 0.31601 0.33476 0.35029 0.34903 0.35326 0.37269 0.38376 0.37772 0.40679 0.40281 0.41811 0.44001 0.45989 0.4679 0.4704 0.47439 0.47396 0.49362 0.50024 0.51367 0.54846 0.55858 0.54125 0.5704 0.5921 0.57543 0.60754 0.60042 0.62576 0.64312 0.64297 0.65764 0.66465 0.66941 0.68435 0.70283 0.7048 0.70582 0.74579 0.75081 0.73912 0.78267 0.79113 0.79342 0.79014 0.82181 0.82583 0.83386 0.83173 0.86297 0.86149 0.8874 0.89973 0.88878 0.89847 0.91133 0.91911 0.96274 0.93716 0.98473 0.98448 0.97222 1.0)) (quote 3dc) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj (setf (z-points newobj) (list -1.0 -0.98885 -0.9777 -0.96645 -0.95537 -0.9443 -0.93327 -0.92237 -0.91037 -0.90092 -0.88814 -0.87899 -0.86604 -0.85622 -0.84457 -0.83392 -0.82158 -0.81033 -0.79877 -0.79099 -0.77582 -0.76715 -0.75547 -0.7455 -0.73391 -0.72251 -0.71356 -0.70106 -0.68987 -0.67742 -0.66557 -0.65806 -0.64249 -0.63483 -0.6218 -0.61364 -0.60234 -0.58543 -0.57544 -0.56303 -0.55576 -0.54099 -0.53223 -0.52428 -0.5096 -0.50158 -0.485 -0.47716 -0.47211 -0.45937 -0.44395 -0.43137 -0.42025 -0.40653 -0.40339 -0.38951 -0.36913 -0.36893 -0.34774 -0.33734 -0.33397 -0.32961 -0.30304 -0.29959 -0.28321 -0.27449 -0.28027 -0.24309 -0.23102 -0.25661 -0.25022 -0.17589 -0.28298 -0.18107 -0.15954 -0.29531 -0.21591 -0.11292 0.00325 -0.15794 -0.12965 -0.24602 -0.26434 -0.35417 0.15003 0.25928 -0.19404 -0.40306 -0.28255 -0.27113 -0.33258 0.20435 0.41404 -0.2476 -0.16352 0.34727 -0.17908 0.32392 0.2065 0.1892 0.08558 0.07452 0.11565 0.21937 0.25863 0.28584 0.23089 0.22853 0.14112 0.26483 0.30169 0.24059 0.21349 0.27862 0.25164 0.26074 0.31206 0.31169 0.31601 0.33476 0.35029 0.34903 0.35326 0.37269 0.38376 0.37772 0.40679 0.40281 0.41811 0.44001 0.45989 0.4679 0.4704 0.47439 0.47396 0.49362 0.50024 0.51367 0.54846 0.55858 0.54125 0.5704 0.5921 0.57543 0.60754 0.60042 0.62576 0.64312 0.64297 0.65764 0.66465 0.66941 0.68435 0.70283 0.7048 0.70582 0.74579 0.75081 0.73912 0.78267 0.79113 0.79342 0.79014 0.82181 0.82583 0.83386 0.83173 0.86297 0.86149 0.8874 0.89973 0.88878 0.89847 0.91133 0.91911 0.96274 0.93716 0.98473 0.98448 0.97222 1.0))) newobj) "x" nil (pairlis (quote (picture line-width room-size show-room show-axes mode winpos winsize bg-color)) (list nil 1.0 10 0 1 0 (om-make-point 773 59) (om-make-point 800 800) nil)) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 172 30) (quote "moving root-mean-square") "" (om-make-point 530 252) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "RMS" (quote rms) (quote ((om-load-inputfun (quote input-funbox) "a list, bpf, bpc, 3dc, 3d-trajectory or libs thereof" "SELF" nil) (om-load-inputfun (quote input-funbox) "windowsize in samples" "WINDOWSIZE" 5))) (om-make-point 484 243) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box t)) box) (let ((box (om-load-editor-box1 "TEXT-BOX" (quote text-box) (quote ((om-load-inputfun (quote input-funbox) "dialog-item text (string)" "text" "untitled"))) (om-make-point 86 309) (om-make-point 130 50) (om-make-dialog-item (quote text-box) (om-make-point 1 1) (om-make-point 110 23) "1.0005931" :font (om-make-font "Verdana" 11.0 :family "Verdana" :style (quote (:plain)) :mode (quote nil))) nil nil (pairlis (quote (winsize winpos)) (list (om-make-point 335 275) (om-make-point 10 40))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "RMS" (quote rms) (quote ((om-load-inputfun (quote input-funbox) "a list, bpf, bpc, 3dc, 3d-trajectory or libs thereof" "SELF" nil))) (om-make-point 101 245) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment 3" (om-make-point 121 30) (quote "magnitude vector") "" (om-make-point 925 282) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF 11" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 4))) (om-make-point 866 330) (om-make-point 102 95) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (1.0 2.0 3.0 4.0 5.0 6.0 7.0 8.0 9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0 55.0 56.0 57.0 58.0 59.0 60.0 61.0 62.0 63.0 64.0 65.0 66.0 67.0 68.0 69.0 70.0 71.0 72.0 73.0 74.0 75.0 76.0 77.0 78.0 79.0 80.0 81.0 82.0 83.0 84.0 85.0 86.0 87.0 88.0 89.0 90.0 91.0 92.0 93.0 94.0 95.0 96.0 97.0 98.0 99.0 100.0 101.0 102.0 103.0 104.0 105.0 106.0 107.0 108.0 109.0 110.0 111.0 112.0 113.0 114.0 115.0 116.0 117.0 118.0 119.0 120.0 121.0 122.0 123.0 124.0 125.0 126.0 127.0 128.0 129.0 130.0 131.0 132.0 133.0 134.0 135.0 136.0 137.0 138.0 139.0 140.0 141.0 142.0 143.0 144.0 145.0 146.0 147.0 148.0 149.0 150.0 151.0 152.0 153.0 154.0 155.0 156.0 157.0 158.0 159.0 160.0 161.0 162.0 163.0 164.0 165.0 166.0 167.0 168.0 169.0 170.0 171.0 172.0 173.0 174.0 175.0 176.0 177.0 178.0 179.0 180.0 181.0)) (quote (1.00311 0.9917 0.98051 0.96959 0.95888 0.94864 0.93822 0.92845 0.91779 0.90968 0.89842 0.89085 0.8791 0.87071 0.85978 0.85024 0.83855 0.82759 0.81639 0.80821 0.79319 0.78319 0.77116 0.76037 0.74766 0.73484 0.72457 0.71113 0.69907 0.6865 0.67421 0.66677 0.65221 0.64632 0.63591 0.63166 0.62489 0.61549 0.61218 0.60868 0.60837 0.60545 0.60783 0.60984 0.60478 0.60504 0.59842 0.59708 0.59949 0.59117 0.58293 0.57531 0.56553 0.55344 0.54882 0.5386 0.51951 0.51627 0.49883 0.48584 0.48203 0.47495 0.45223 0.45224 0.43046 0.42477 0.42505 0.40371 0.40736 0.41866 0.42777 0.37589 0.47185 0.42123 0.45057 0.54913 0.4847 0.46934 0.44205 0.57271 0.68012 0.63573 0.72749 0.61726 0.72191 0.62204 0.48979 0.61483 0.57716 0.47283 0.58438 0.74371 0.60164 0.4726 0.49273 0.64649 0.48733 0.74121 0.55816 0.6927 0.56491 0.50005 0.53847 0.54362 0.57019 0.62782 0.63771 0.56321 0.54014 0.69871 0.71053 0.70623 0.70713 0.74618 0.75674 0.78938 0.82623 0.83188 0.85254 0.87172 0.88579 0.88557 0.88768 0.88729 0.89025 0.87286 0.89712 0.89253 0.89848 0.89514 0.90537 0.90778 0.91238 0.91489 0.91568 0.92278 0.92474 0.92044 0.93762 0.9451 0.92599 0.95187 0.97203 0.96781 0.99262 1.01195 1.04533 1.07369 1.09521 1.137 1.15161 1.17335 1.19512 1.22343 1.24003 1.2459 1.26046 1.26773 1.26196 1.28715 1.2845 1.28274 1.27535 1.29971 1.29359 1.29959 1.29231 1.32169 1.3161 1.32985 1.3446 1.33893 1.33573 1.3383 1.34013 1.36684 1.346 1.38152 1.38622 1.38023 1.41543)) (quote bpf) 5))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) nil nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point -835 62) (om-make-point 465 339))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 176 30) (quote "moving-standard-deviation") "" (om-make-point 182 666) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcomment "comment" (om-make-point 124 30) (quote "root-mean-square") "" (om-make-point 178 257) nil (om-make-color 0 0 0) (om-make-font "Verdana" 12 :family "Verdana" :style (quote (:plain)) :mode (quote nil))))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF 7" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 4))) (om-make-point 482 321) (om-make-point 102 95) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (-10.0 -9.8 -9.6 -9.400001 -9.200001 -9.000001 -8.800001 -8.600001 -8.400002 -8.200002 -8.000002 -7.800002 -7.600003 -7.4000025 -7.2000027 -7.0000024 -6.800003 -6.6000033 -6.4000034 -6.2000036 -6.000004 -5.800004 -5.600004 -5.4000044 -5.2000046 -5.000005 -4.800005 -4.600005 -4.4000054 -4.2000055 -4.0000057 -3.800006 -3.6000057 -3.4000056 -3.2000056 -3.0000055 -2.8000055 -2.6000054 -2.4000054 -2.2000053 -2.0000053 -1.8000052 -1.6000052 -1.4000051 -1.200005 -1.000005 -0.800005 -0.60000504 -0.40000504 -0.20000504 -5.0366E-6 0.19999497 0.39999497 0.59999496 0.79999495 0.999995 1.1999949 1.399995 1.599995 1.799995 1.9999951 2.199995 2.399995 2.5999952 2.7999952 2.9999953 3.1999953 3.3999954 3.5999954 3.7999957 3.9999955 4.1999955 4.3999953 4.599995 4.799995 4.9999948 5.1999946 5.3999944 5.599994 5.799994 5.999994 6.1999936 6.3999934 6.599993 6.799993 6.999993 7.199993 7.3999925 7.599992 7.799992 7.999992 8.199992 8.399992 8.599992 8.799992 8.999991 9.199991 9.399991 9.599991 9.799991)) (quote (1.093912 1.1470556 0.67471016 0.80215544 1.1958516 0.989538 0.43164298 0.08159992 0.55476404 1.3453776 1.851913 1.6506361 0.9120137 0.22842896 0.2140088 0.74137974 1.1761916 1.0407003 0.5845877 0.9601307 1.1998586 0.83748615 0.2859823 0.15545027 0.77636844 1.550404 1.8710826 1.4676086 0.679593 0.11313486 0.3448258 0.9049594 1.2052852 0.8946688 0.6108313 1.0916748 1.1473135 0.66886324 0.16727299 0.29163018 1.01349 1.7141688 1.8239313 1.249704 0.46888945 0.08760817 0.49983108 1.0451748 1.1765578 0.7354938 0.7354868 1.1765484 1.0451664 0.49982557 0.08761339 0.46888754 1.2497019 1.8239306 1.7141699 1.0134924 0.29163077 0.16727266 0.6688702 1.1473227 1.0916844 0.61083496 0.8946601 1.2052758 0.9049512 0.34482193 0.11313878 0.6795907 1.4676069 1.8710827 1.5504056 0.7763708 0.15544832 0.28598517 0.8374938 1.1998679 0.9601396 0.5845862 1.040691 1.1761825 0.7413725 0.21400759 0.22842914 0.91201157 1.650635 1.8519135 1.3453795 0.5547661 0.08159421 0.43164763 0.989546 1.1958605 0.8021628 0.6747047 1.1470466 1.3202231)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) nil nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point -1045 163) (om-make-point 465 339))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box t)) box) (let ((box (om-load-editor-box1 "SLIDER 3" (quote slider) (quote ((om-load-inputfunmenu1 (quote input-funmenu) "vertical or horizontal" "direction" (quote :horizontal) (list (list "horizontal" (quote :horizontal)) (list "vertical" (quote :vertical)))) (om-load-inputfun (quote input-funbox) "min and max values" "range" (list 2 10)) (om-load-inputfun (quote input-funbox) "step" "increment" 1) (om-load-inputfun (quote input-funbox) "slider value" "value" 60) (om-load-inputfun (quote input-funbox) "a patch in mode lambda" "action" nil))) (om-make-point 612 170) (om-make-point 138 58) (let ((rep (om-make-dialog-item (quote slider) (om-make-point 1 1) (om-make-point 122 24) "untitled" :direction :horizontal :range (quote (2 10)) :increment 1 :value 2))) rep) "x" nil (pairlis (quote (winpos winsize)) (list (om-make-point 10 40) (om-make-point 335 275))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box t)) box) (let ((box (om-load-editor-box1 "BPF 6" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 4))) (om-make-point 479 135) (om-make-point 102 95) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (-10.0 -9.8 -9.6 -9.400001 -9.200001 -9.000001 -8.800001 -8.600001 -8.400002 -8.200002 -8.000002 -7.800002 -7.600003 -7.4000025 -7.2000027 -7.0000024 -6.800003 -6.6000033 -6.4000034 -6.2000036 -6.000004 -5.800004 -5.600004 -5.4000044 -5.2000046 -5.000005 -4.800005 -4.600005 -4.4000054 -4.2000055 -4.0000057 -3.800006 -3.6000057 -3.4000056 -3.2000056 -3.0000055 -2.8000055 -2.6000054 -2.4000054 -2.2000053 -2.0000053 -1.8000052 -1.6000052 -1.4000051 -1.200005 -1.000005 -0.800005 -0.60000504 -0.40000504 -0.20000504 -5.0366E-6 0.19999497 0.39999497 0.59999496 0.79999495 0.999995 1.1999949 1.399995 1.599995 1.799995 1.9999951 2.199995 2.399995 2.5999952 2.7999952 2.9999953 3.1999953 3.3999954 3.5999954 3.7999957 3.9999955 4.1999955 4.3999953 4.599995 4.799995 4.9999948 5.1999946 5.3999944 5.599994 5.799994 5.999994 6.1999936 6.3999934 6.599993 6.799993 6.999993 7.199993 7.3999925 7.599992 7.799992 7.999992 8.199992 8.399992 8.599992 8.799992 8.999991 9.199991 9.399991 9.599991 9.799991)) (quote (0.806396 1.320232 0.9425818 -0.14834798 -1.1246775 -1.2630211 -0.6026182 0.09737855 0.061923445 -0.7821073 -1.7344711 -1.9623387 -1.2642888 -0.25517106 0.19810933 -0.22880607 -1.0231987 -1.3114563 -0.6679793 0.4871234 1.2674434 1.1282325 0.36035758 -0.18361426 0.12089408 1.0912747 1.9017425 1.8399119 0.96045495 0.03492278 -0.15613902 0.46198517 1.1935127 1.216944 0.346283 -0.79140246 -1.3255904 -0.9356637 -0.13888633 0.19149697 -0.3652742 -1.3859649 -1.988932 -1.6424372 -0.65262545 0.117450595 0.039442897 -0.7057666 -1.2987204 -1.0401453 -5.0366E-6 1.0401354 1.2987111 0.70575834 -0.03944993 -0.11745601 0.65262175 1.6424354 1.9889323 1.3859673 0.3652783 -0.19149095 0.13889385 0.93567265 1.3256 0.7914126 -0.34627274 -1.2169341 -1.1935035 -0.4619771 0.15614575 -0.03491801 -0.9604519 -1.8399109 -1.9017435 -1.0912776 -0.120898776 0.18360788 -0.36036533 -1.1282413 -1.267453 -0.48713344 0.66796935 1.3114468 1.02319 0.22879857 -0.19811541 0.25516665 1.2642864 1.9623383 1.7344725 0.7821106 -0.061918497 -0.097372115 0.6026259 1.2630298 1.1246868 0.14835751 -0.9425724 -1.3202231)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) "x" nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point -1045 163) (om-make-point 465 339))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF 4" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 4))) (om-make-point 114 534) (om-make-point 102 95) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (-10.0 -9.8 -9.6 -9.400001 -9.200001 -9.000001 -8.800001 -8.600001 -8.400002 -8.200002 -8.000002 -7.800002 -7.600003 -7.4000025 -7.2000027 -7.0000024 -6.800003 -6.6000033 -6.4000034 -6.2000036 -6.000004 -5.800004 -5.600004 -5.4000044 -5.2000046 -5.000005 -4.800005 -4.600005 -4.4000054 -4.2000055 -4.0000057 -3.800006 -3.6000057 -3.4000056 -3.2000056 -3.0000055 -2.8000055 -2.6000054 -2.4000054 -2.2000053 -2.0000053 -1.8000052 -1.6000052 -1.4000051 -1.200005 -1.000005 -0.800005 -0.60000504 -0.40000504 -0.20000504 -5.0366E-6 0.19999497 0.39999497 0.59999496 0.79999495 0.999995 1.1999949 1.399995 1.599995 1.799995 1.9999951 2.199995 2.399995 2.5999952 2.7999952 2.9999953 3.1999953 3.3999954 3.5999954 3.7999957 3.9999955 4.1999955 4.3999953 4.599995 4.799995 4.9999948 5.1999946 5.3999944 5.599994 5.799994 5.999994 6.1999936 6.3999934 6.599993 6.799993 6.999993 7.199993 7.3999925 7.599992 7.799992 7.999992 8.199992 8.399992 8.599992 8.799992 8.999991 9.199991 9.399991 9.599991 9.799991)) (quote (0.806396 1.320232 0.9425818 -0.14834798 -1.1246775 -1.2630211 -0.6026182 0.09737855 0.061923445 -0.7821073 -1.7344711 -1.9623387 -1.2642888 -0.25517106 0.19810933 -0.22880607 -1.0231987 -1.3114563 -0.6679793 0.4871234 1.2674434 1.1282325 0.36035758 -0.18361426 0.12089408 1.0912747 1.9017425 1.8399119 0.96045495 0.03492278 -0.15613902 0.46198517 1.1935127 1.216944 0.346283 -0.79140246 -1.3255904 -0.9356637 -0.13888633 0.19149697 -0.3652742 -1.3859649 -1.988932 -1.6424372 -0.65262545 0.117450595 0.039442897 -0.7057666 -1.2987204 -1.0401453 -5.0366E-6 1.0401354 1.2987111 0.70575834 -0.03944993 -0.11745601 0.65262175 1.6424354 1.9889323 1.3859673 0.3652783 -0.19149095 0.13889385 0.93567265 1.3256 0.7914126 -0.34627274 -1.2169341 -1.1935035 -0.4619771 0.15614575 -0.03491801 -0.9604519 -1.8399109 -1.9017435 -1.0912776 -0.120898776 0.18360788 -0.36036533 -1.1282413 -1.267453 -0.48713344 0.66796935 1.3114468 1.02319 0.22879857 -0.19811541 0.25516665 1.2642864 1.9623383 1.7344725 0.7821106 -0.061918497 -0.097372115 0.6026259 1.2630298 1.1246868 0.14835751 -0.9425724 -1.3202231)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) "x" nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point -1045 163) (om-make-point 465 339))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-editor-box1 "BPF 3" (quote bpf) (quote ((om-load-inputfun (quote input-funbox) "object" "self" nil) (om-load-inputfun (quote input-funbox) "X coordinates (list)" "x-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "Y coordinates (list)" "y-points" (list 0 100)) (om-load-inputfun (quote input-funbox) "precision (integer) [0 - 10]" "decimals" 4))) (om-make-point 103 139) (om-make-point 102 95) (let ((newobj (when (find-class (quote bpf) nil) (let ((newbpf (simple-bpf-from-list (quote (-10.0 -9.8 -9.6 -9.400001 -9.200001 -9.000001 -8.800001 -8.600001 -8.400002 -8.200002 -8.000002 -7.800002 -7.600003 -7.4000025 -7.2000027 -7.0000024 -6.800003 -6.6000033 -6.4000034 -6.2000036 -6.000004 -5.800004 -5.600004 -5.4000044 -5.2000046 -5.000005 -4.800005 -4.600005 -4.4000054 -4.2000055 -4.0000057 -3.800006 -3.6000057 -3.4000056 -3.2000056 -3.0000055 -2.8000055 -2.6000054 -2.4000054 -2.2000053 -2.0000053 -1.8000052 -1.6000052 -1.4000051 -1.200005 -1.000005 -0.800005 -0.60000504 -0.40000504 -0.20000504 -5.0366E-6 0.19999497 0.39999497 0.59999496 0.79999495 0.999995 1.1999949 1.399995 1.599995 1.799995 1.9999951 2.199995 2.399995 2.5999952 2.7999952 2.9999953 3.1999953 3.3999954 3.5999954 3.7999957 3.9999955 4.1999955 4.3999953 4.599995 4.799995 4.9999948 5.1999946 5.3999944 5.599994 5.799994 5.999994 6.1999936 6.3999934 6.599993 6.799993 6.999993 7.199993 7.3999925 7.599992 7.799992 7.999992 8.199992 8.399992 8.599992 8.799992 8.999991 9.199991 9.399991 9.599991 9.799991)) (quote (0.806396 1.320232 0.9425818 -0.14834798 -1.1246775 -1.2630211 -0.6026182 0.09737855 0.061923445 -0.7821073 -1.7344711 -1.9623387 -1.2642888 -0.25517106 0.19810933 -0.22880607 -1.0231987 -1.3114563 -0.6679793 0.4871234 1.2674434 1.1282325 0.36035758 -0.18361426 0.12089408 1.0912747 1.9017425 1.8399119 0.96045495 0.03492278 -0.15613902 0.46198517 1.1935127 1.216944 0.346283 -0.79140246 -1.3255904 -0.9356637 -0.13888633 0.19149697 -0.3652742 -1.3859649 -1.988932 -1.6424372 -0.65262545 0.117450595 0.039442897 -0.7057666 -1.2987204 -1.0401453 -5.0366E-6 1.0401354 1.2987111 0.70575834 -0.03944993 -0.11745601 0.65262175 1.6424354 1.9889323 1.3859673 0.3652783 -0.19149095 0.13889385 0.93567265 1.3256 0.7914126 -0.34627274 -1.2169341 -1.1935035 -0.4619771 0.15614575 -0.03491801 -0.9604519 -1.8399109 -1.9017435 -1.0912776 -0.120898776 0.18360788 -0.36036533 -1.1282413 -1.267453 -0.48713344 0.66796935 1.3114468 1.02319 0.22879857 -0.19811541 0.25516665 1.2642864 1.9623383 1.7344725 0.7821106 -0.061918497 -0.097372115 0.6026259 1.2630298 1.1246868 0.14835751 -0.9425724 -1.3202231)) (quote bpf) 10))) (setf (bpfcolor newbpf) (om-make-color 0 0 0)) (set-name newbpf nil) newbpf)))) (when newobj) newobj) "x" nil (pairlis (quote (picture winpos winsize)) (list nil (om-make-point -1045 163) (om-make-point 465 339))) t nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((7 0 0 0 nil 0) (5 0 4 0 nil 0) (2 0 5 0 nil 0) (3 3 5 2 nil 0) (21 0 7 0 nil 0) (9 0 8 0 nil 0) (20 0 11 0 nil 0) (19 3 11 1 nil 0) (13 0 12 0 nil 0) (22 0 13 0 nil 0) (8 0 15 0 nil 0) (11 0 18 0 nil 0))) nil 6.0901))
